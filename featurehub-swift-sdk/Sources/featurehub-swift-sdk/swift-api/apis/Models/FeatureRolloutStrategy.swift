//
// FeatureRolloutStrategy.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** This is the model for the rollout strategy as required by Dacha and Edge */
public struct FeatureRolloutStrategy: Codable, JSONEncodable, Hashable {

    public var id: String
    /** value between 0 and 1000000 - for four decimal places */
    public var percentage: Int?
    /** if you don't wish to apply percentage based on user id, you can use one or more attributes defined here */
    public var percentageAttributes: [String]?
    /** when we attach the RolloutStrategy for Dacha or SSE this lets us push the value out. Only visible in SDK and SSE Edge. */
    public var value: AnyCodable?
    public var attributes: [FeatureRolloutStrategyAttribute]?

    public init(id: String, percentage: Int? = nil, percentageAttributes: [String]? = nil, value: AnyCodable? = nil, attributes: [FeatureRolloutStrategyAttribute]? = nil) {
        self.id = id
        self.percentage = percentage
        self.percentageAttributes = percentageAttributes
        self.value = value
        self.attributes = attributes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case percentage
        case percentageAttributes
        case value
        case attributes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(percentage, forKey: .percentage)
        try container.encodeIfPresent(percentageAttributes, forKey: .percentageAttributes)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(attributes, forKey: .attributes)
    }
}

